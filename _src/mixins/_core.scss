// Badges

@mixin badge-variant($color) {
  background-color: $color;

  &[href] {
    @include hover-focus {
      background-color: darken($color, 10%);
    }
  }
}

// Buttons

@mixin button-variant($color, $background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);

  color: $color;
  background-color: $background;
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: $color;
    background-color: $active-background;
    border-color: $active-border;
  }
  &:focus,
  &.focus {
    @if $enable-shadows {
      box-shadow: $btn-box-shadow, 0 0 0 2px rgba($border, .5);
    } @else {
      box-shadow: 0 0 0 2px rgba($border, .5);
    }
  }

  &.disabled,
  &:disabled {
    background-color: $background;
    border-color: $border;
  }

  &:active,
  &.active,
  .show > &.dropdownToggle {
    color: $color;
    background-color: $active-background;
    background-image: none;
    border-color: $active-border;
    @include box-shadow($btn-active-box-shadow);
  }
}

@mixin button-outline-variant($color, $color-hover: #fff) {
  color: $color;
  background-image: none;
  background-color: transparent;
  border-color: $color;

  @include hover {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 2px rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:active,
  &.active,
  .show > &.dropdownToggle {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }
}

@mixin button-size($padding-y, $padding-x, $font-size, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  @include border-radius($border-radius);
}

// Cards

@mixin card-variant($background, $border) {
  background-color: $background;
  border-color: $border;

  .cardHeader,
  .cardFooter {
    background-color: transparent;
  }
}

@mixin card-outline-variant($color) {
  background-color: transparent;
  border-color: $color;
}

@mixin card-inverse {
  color: rgba(255,255,255,.65);

  .cardHeader,
  .cardFooter {
    background-color: transparent;
    border-color: rgba(255,255,255,.2);
  }
  .cardHeader,
  .cardFooter,
  .cardTitle,
  .cardBlockquote {
    color: #fff;
  }
  .cardLink,
  .cardText,
  .cardSubtitle,
  .cardBlockquote .cardBlockquoteFooter {
    color: rgba(255,255,255,.65);
  }
  .cardBlockquote .cardBlockquoteFooter {
    display: block;
    font-size: 80%;

    &::before {
      content: "\2014 \00A0";
    }
  }
  .cardLink {
    @include hover-focus {
      color: $card-link-hover-color;
    }
  }
}

// Dropdown divider

@mixin nav-divider($color: #e5e5e5) {
  height: 1px;
  margin: ($spacer-y / 2) 0;
  overflow: hidden;
  background-color: $color;
}

// Forms

@mixin form-control-validation($color) {
  .formControlFeedback,
  .formControlLabel,
  .colFormLabel,
  .formCheckLabel,
  .customControl {
    color: $color;
  }

  .formControl {
    border-color: $color;

    &:focus {
      @include box-shadow($input-box-shadow, 0 0 6px lighten($color, 20%));
    }
  }

  .inputGroupAddon {
    color: $color;
    border-color: $color;
    background-color: lighten($color, 40%);
  }
}

@mixin form-control-focus() {
  &:focus {
    color: $input-color-focus;
    background-color: $input-bg-focus;
    border-color: $input-border-focus;
    outline: none;
    @include box-shadow($input-box-shadow-focus);
  }
}

@mixin input-size($parent, $input-height, $padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  #{$parent} {
    height: $input-height;
    padding: $padding-y $padding-x;
    font-size: $font-size;
    line-height: $line-height;
    @include border-radius($border-radius);
  }

  select#{$parent} {
    height: $input-height;
    line-height: $input-height;
  }

  textarea#{$parent},
  select[multiple]#{$parent} {
    height: auto;
  }
}

// List Groups
@mixin list-group-item-variant($state, $background, $color) {
  .listGroupItem#{$state} {
    color: $color;
    background-color: $background;
  }

  a.listGroupItem#{$state},
  button.listGroupItem#{$state} {
    color: $color;

    .listGroupItemHeading {
      color: inherit;
    }

    @include hover-focus {
      color: $color;
      background-color: darken($background, 5%);
    }

    &.active {
      color: #fff;
      background-color: $color;
      border-color: $color;
    }
  }
}
