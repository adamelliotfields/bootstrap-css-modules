@import './_variables.scss';
@import './mixins/_border-radius.scss';
@import './mixins/_hover.scss';
@import './mixins/_list-group.scss';

// Easily usable on <ul>, <ol>, or <div>.
.listGroup {
  display: flex;
  flex-direction: column;

  // No need to set list-style: none; since .list-group-item is block level
  padding-left: 0; // reset padding because ul and ol
  margin-bottom: 0;
}

// Use anchor or button elements instead of `li`s or `div`s to create interactive
// list items. Includes an extra `.active` modifier class for selected items.
.listGroupItemAction {
  width: 100%; // For `<button>`s (anchors become 100% by default though)
  color: $list-group-link-color;
  text-align: inherit; // For `<button>`s (anchors inherit)

  .listGroupItemHeading {
    color: $list-group-link-heading-color;
  }

  // Hover state
  @include hover-focus {
    color: $list-group-link-hover-color;
    text-decoration: none;
    background-color: $list-group-hover-bg;
  }

  &:active {
    color: $list-group-link-active-color;
    background-color: $list-group-link-active-bg;
  }
}

// Use on `li`s or `div`s within the `.list-group` parent.
.listGroupItem {
  position: relative;
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  padding: $list-group-item-padding-y $list-group-item-padding-x;
  // Place the border on the list items and negative margin up for better styling
  margin-bottom: -$list-group-border-width;
  background-color: $list-group-bg;
  border: $list-group-border-width solid $list-group-border-color;

  &:first-child {
    @include border-top-radius($list-group-border-radius);
  }

  &:last-child {
    margin-bottom: 0;
    @include border-bottom-radius($list-group-border-radius);
  }

  @include hover-focus {
    text-decoration: none;
  }

  &.disabled,
  &:disabled {
    color: $list-group-disabled-color;
    cursor: $cursor-disabled;
    background-color: $list-group-disabled-bg;

    // Force color to inherit for custom content
    .listGroupItemHeading {
      color: inherit;
    }
    .listGroupItemText {
      color: $list-group-disabled-text-color;
    }
  }

  // Include both here for `<a>`s and `<button>`s
  &.active {
    z-index: 2; // Place active items above their siblings for proper border styling
    color: $list-group-active-color;
    background-color: $list-group-active-bg;
    border-color: $list-group-active-border;

    // Force color to inherit for custom content
    .listGroupItemHeading,
    .listGroupItemHeading > small,
    .listGroupItemHeading > .listGroupItemSmall {
      color: inherit;
    }

    .listGroupItemHeading > .listGroupItemSmall {
      font-size: $small-font-size;
      font-weight: $font-weight-normal;
    }

    .listGroupItemText {
      color: $list-group-active-text-color;
    }
  }
}

// Remove borders and border-radius to keep list group items edge-to-edge. Most
// useful within other components (e.g., cards).
.listGroupFlush {
  .listGroupItem {
    border-right: 0;
    border-left: 0;
    border-radius: 0;
  }

  &:first-child {
    .listGroupItem:first-child {
      border-top: 0;
    }
  }

  &:last-child {
    .listGroupItem:last-child {
      border-bottom: 0;
    }
  }
}

// Add modifier classes to change text and background color on individual items.
// Organizationally, this must come after the `:hover` states.
@include list-group-item-variant(Success, $state-success-bg, $state-success-text);
@include list-group-item-variant(Info, $state-info-bg, $state-info-text);
@include list-group-item-variant(Warning, $state-warning-bg, $state-warning-text);
@include list-group-item-variant(Danger, $state-danger-bg, $state-danger-text);
