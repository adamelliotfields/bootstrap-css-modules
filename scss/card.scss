@import './_variables.scss';
@import './mixins/_border-radius.scss';
@import './mixins/_breakpoints.scss';
@import './mixins/_cards.scss';
@import './mixins/_hover.scss';

// Base styles
.card {
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  word-wrap: break-word;
  background-color: $card-bg;
  background-clip: border-box;
  border: $card-border-width solid $card-border-color;
  @include border-radius($card-border-radius);
}

.cardBody {
  // Enable `flex-grow: 1` for decks and groups so that card blocks take up
  // as much space as possible, ensuring footers are aligned to the bottom.
  flex: 1 1 auto;
  padding: $card-spacer-x;
}

.cardTitle {
  margin-bottom: $card-spacer-y;
}

.cardSubtitle {
  margin-top: -($card-spacer-y / 2);
  margin-bottom: 0;
}

.cardText:last-child {
  margin-bottom: 0;
}

.cardLink {
  @include hover {
    text-decoration: none;
  }

  + .cardLink {
    margin-left: $card-spacer-x;
  }
}

// Optional textual caps
.cardHeader {
  padding: $card-spacer-y $card-spacer-x;
  margin-bottom: 0; // Removes the default margin-bottom of <hN>
  background-color: $card-cap-bg;
  border-bottom: $card-border-width solid $card-border-color;

  &:first-child {
    @include border-radius($card-inner-border-radius $card-inner-border-radius 0 0);
  }
}

.cardFooter {
  padding: $card-spacer-y $card-spacer-x;
  background-color: $card-cap-bg;
  border-top: $card-border-width solid $card-border-color;

  &:last-child {
    @include border-radius(0 0 $card-inner-border-radius $card-inner-border-radius);
  }
}

// Header navs
.cardHeaderTabs {
  margin-right: -($card-spacer-x / 2);
  margin-bottom: -$card-spacer-y;
  margin-left: -($card-spacer-x / 2);
  border-bottom: 0;
}

.cardHeaderPills {
  margin-right: -($card-spacer-x / 2);
  margin-left: -($card-spacer-x / 2);
}

// Card image
.cardImgOverlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: $card-img-overlay-padding;
}

.cardImg {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  @include border-radius($card-inner-border-radius);
}

// Card image caps
.cardImgTop {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  @include border-top-radius($card-inner-border-radius);
}
.cardImgBottom {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  @include border-bottom-radius($card-inner-border-radius);
}

// Card deck
@include media-breakpoint-up(Sm) {
  .cardDeck {
    display: flex;
    flex-flow: row wrap;
    margin-right: -$card-deck-margin;
    margin-left: -$card-deck-margin;

    .card {
      display: flex;
      flex: 1 0 0;
      flex-direction: column;
      margin-right: $card-deck-margin;
      margin-left: $card-deck-margin;
    }
  }
}

// Card groups
@include media-breakpoint-up(Sm) {
  .cardGroup {
    display: flex;
    flex-flow: row wrap;

    .card {
      flex: 1 0 0;

      + .card {
        margin-left: 0;
        border-left: 0;
      }

      // Handle rounded corners
      @if $enable-rounded {
        &:first-child {
          @include border-right-radius(0);

          .cardImgTop {
            border-top-right-radius: 0;
          }
          .cardImgBottom {
            border-bottom-right-radius: 0;
          }
        }
        &:last-child {
          @include border-left-radius(0);

          .cardImgTop {
            border-top-left-radius: 0;
          }
          .cardImgBottom {
            border-bottom-left-radius: 0;
          }
        }

        &:not(:first-child):not(:last-child) {
          border-radius: 0;

          .cardImgTop,
          .cardImgBottom {
            border-radius: 0;
          }
        }
      }
    }
  }
}

// Columns
.cardColumns {
  .card {
    margin-bottom: $card-columns-margin;
  }

  @include media-breakpoint-up(Sm) {
    column-count: $card-columns-count;
    column-gap: $card-columns-gap;

    .card {
      display: inline-block; // Don't let them vertically span multiple columns
      width: 100%; // Don't let their width change
    }
  }
}
