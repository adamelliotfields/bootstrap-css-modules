@import './_variables.scss';
@import './mixins/_border-radius.scss';
@import './mixins/_box-shadow.scss';
@import './mixins/_breakpoints.scss';
@import './mixins/_forms.scss';
@import './mixins/_hover.scss';
@import './mixins/_transition.scss';

//
// Textual form controls
//

.formControl {
  display: block;
  width: 100%;
  // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  // height: $input-height;
  padding: $input-btn-padding-y $input-btn-padding-x;
  font-size: $font-size-base;
  line-height: $input-btn-line-height;
  color: $input-color;
  background-color: $input-bg;
  // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
  background-image: none;
  background-clip: padding-box;
  border: $input-btn-border-width solid $input-border-color;

  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @if $enable-rounded {
    // Manually use the if/else instead of the mixin to account for iOS override
    border-radius: $input-border-radius;
  } @else {
    // Otherwise undo the iOS default
    border-radius: 0;
  }

  @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();

  // Placeholder
  &::placeholder {
    color: $input-placeholder-color;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }
}

select.form-control {
  &:not([size]):not([multiple]) {
    height: $input-height;
  }

  &:focus::-ms-value {
    // Suppress the nested default white text on blue background highlight given to
    // the selected option text when the (still closed) <select> receives focus
    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
    // match the appearance of the native widget.
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $input-color;
    background-color: $input-bg;
  }
}

// Make file inputs better match text inputs by forcing them to new lines.
.formControlFile,
.formControlRange {
  display: block;
}

//
// Labels
//

// For use with horizontal and inline forms, when you need the label text to
// align with the form controls.
.colFormLabel {
  padding-top: calc(#{$input-btn-padding-y} - #{$input-btn-border-width} * 2);
  padding-bottom: calc(#{$input-btn-padding-y} - #{$input-btn-border-width} * 2);
  margin-bottom: 0; // Override the `<label>` default
}

.colFormLabelLg {
  padding-top: calc(#{$input-btn-padding-y-lg} - #{$input-btn-border-width} * 2);
  padding-bottom: calc(#{$input-btn-padding-y-lg} - #{$input-btn-border-width} * 2);
  font-size: $font-size-lg;
}

.colFormLabelSm {
  padding-top: calc(#{$input-btn-padding-y-sm} - #{$input-btn-border-width} * 2);
  padding-bottom: calc(#{$input-btn-padding-y-sm} - #{$input-btn-border-width} * 2);
  font-size: $font-size-sm;
}

//
// Legends
//

// For use with horizontal and inline forms, when you need the legend text to
// be the same size as regular labels, and to align with the form controls.
.colFormLegend {
  padding-top: $input-btn-padding-y;
  padding-bottom: $input-btn-padding-y;
  margin-bottom: 0;
  font-size: $font-size-base;
}

// Readonly controls as plain text
//
// Apply class to a readonly input to make it appear like regular plain
// text (without any border, background color, focus indicator)

.formControlPlaintext {
  padding-top: $input-btn-padding-y;
  padding-bottom: $input-btn-padding-y;
  margin-bottom: 0; // match inputs if this class comes on inputs with default margins
  line-height: $input-btn-line-height;
  border: solid transparent;
  border-width: $input-btn-border-width 0;

  &.formControlSm,
  &.formControlLg {
    padding-right: 0;
    padding-left: 0;
  }
}

// Form control sizing
//
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// The `.form-group-* form-control` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.

.formControlSm {
  padding: $input-btn-padding-y-sm $input-btn-padding-x-sm;
  font-size: $font-size-sm;
  line-height: $input-btn-line-height-sm;
  @include border-radius($input-border-radius-sm);
}

select.formControlSm {
  &:not([size]):not([multiple]) {
    height: $input-height-sm;
  }
}

.formControlLg {
  padding: $input-btn-padding-y-lg $input-btn-padding-x-lg;
  font-size: $font-size-lg;
  line-height: $input-btn-line-height-lg;
  @include border-radius($input-border-radius-lg);
}

select.formControlLg {
  &:not([size]):not([multiple]) {
    height: $input-height-lg;
  }
}

// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.formGroup {
  margin-bottom: $form-group-margin-bottom;
}

.formText {
  display: block;
  margin-top: $form-text-margin-top;
}

// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.

.formCheck {
  position: relative;
  display: block;
  margin-bottom: $form-check-margin-bottom;

  &.disabled {
    .formCheckLabel {
      color: $text-muted;
    }
  }
}

.formCheckLabel {
  padding-left: $form-check-input-gutter;
  margin-bottom: 0; // Override default `<label>` bottom margin
}

.formCheckInput {
  position: absolute;
  margin-top: $form-check-input-margin-y;
  margin-left: -$form-check-input-gutter;
}

// Radios and checkboxes on same line
.formCheckInline {
  display: inline-block;

  .formCheckLabel {
    vertical-align: middle;
  }

  + .formCheckInline {
    margin-left: $form-check-inline-margin-x;
  }
}

// Form validation
//
// Provide feedback to users when form field values are valid or invalid. Works
// primarily for client-side validation via scoped `:invalid` and `:valid`
// pseudo-classes but also includes `.is-invalid` and `.is-valid` classes for
// server side validation.

.invalidFeedback {
  display: none;
  margin-top: .25rem;
  font-size: .875rem;
  color: $form-feedback-invalid-color;
}

.invalidTooltip {
  position: absolute;
  top: 100%;
  z-index: 5;
  display: none;
  width: 250px;
  padding: .5rem;
  margin-top: .1rem;
  font-size: .875rem;
  line-height: 1;
  color: #fff;
  background-color: rgba($form-feedback-invalid-color, 0.8);
  border-radius: 0.2rem;
}

@include form-validation-state("valid", "Valid", $form-feedback-valid-color);
@include form-validation-state("invalid", "Invalid", $form-feedback-invalid-color);

// Inline forms
//
// Make forms appear inline(-block) by adding the `.form-inline` class. Inline
// forms begin stacked on extra small (mobile) devices and then go inline when
// viewports reach <768px.
//
// Requires wrapping inputs and labels with `.form-group` for proper display of
// default HTML form controls and our custom form controls (e.g., input groups).

.formInline {
  display: flex;
  flex-flow: row wrap;
  align-items: center; // Prevent shorter elements from growing to same height as others (e.g., small buttons growing to normal sized button height)

  // Because we use flex, the initial sizing of checkboxes is collapsed and
  // doesn't occupy the full-width (which is what we want for xs grid tier),
  // so we force that here.
  .formCheck {
    width: 100%;
  }

  // Kick in the inline
  @include media-breakpoint-up(Sm) {
    label {
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 0;
    }

    // Inline-block all the things for "inline"
    .formGroup {
      display: flex;
      flex: 0 0 auto;
      flex-flow: row wrap;
      align-items: center;
      margin-bottom: 0;
    }

    // Allow folks to *not* use `.form-group`
    .formControl {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
      vertical-align: middle;
    }

    // Make static controls behave like regular ones
    .formControlPlaintext {
      display: inline-block;
    }

    .inputGroup {
      width: auto;
    }

    .formControlLabel {
      margin-bottom: 0;
      vertical-align: middle;
    }

    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match.
    .formCheck {
      display: flex;
      align-items: center;
      justify-content: center;
      width: auto;
      margin-top: 0;
      margin-bottom: 0;
    }
    .formCheckLabel {
      padding-left: 0;
    }
    .formCheckInput {
      position: relative;
      margin-top: 0;
      margin-right: $form-check-input-margin-x;
      margin-left: 0;
    }

    // Re-override the feedback icon.
    .hasFeedback .formControlFeedback {
      top: 0;
    }
  }
}

// Input Group
// ==========================================================================

// Base styles
.inputGroup {
  position: relative;
  display: flex;
  width: 100%;

  .formControl {
    // Ensure that the input is always above the *appended* addon button for
    // proper border colors.
    position: relative;
    z-index: 2;
    flex: 1 1 auto;
    // Add width 1% and flex-basis auto to ensure that button will not wrap out
    // the column. Applies to IE Edge+ and Firefox. Chrome does not require this.
    width: 1%;
    margin-bottom: 0;

    // Bring the "active" form control to the front
    @include hover-focus-active {
      z-index: 3;
    }
  }
}

.inputGroupAddon,
.inputGroupBtn,
.inputGroup .formControl {
  // Vertically centers the content of the addons within the input group
  display: flex;
  align-items: center;

  &:not(:first-child):not(:last-child) {
    @include border-radius(0);
  }
}

.inputGroupAddon,
.inputGroupBtn {
  white-space: nowrap;
  vertical-align: middle; // Match the inputs
}

// Sizing options
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.inputGroupLg > .formControl,
.inputGroupLg > .inputGroupAddon {
  @extend .formControlLg;
}

.inputGroupSm > .formControl,
.inputGroupSm > .inputGroupAddon {
  @extend .formControlSm;
}

//
// Text input groups
//

.inputGroupAddon {
  padding: $input-btn-padding-y $input-btn-padding-x;
  margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
  font-size: $font-size-base; // Match inputs
  font-weight: $font-weight-normal;
  line-height: $input-btn-line-height;
  color: $input-group-addon-color;
  text-align: center;
  background-color: $input-group-addon-bg;
  background-clip: padding-box;
  border: $input-btn-border-width solid $input-group-addon-border-color;
  @include border-radius($input-border-radius);

  // Sizing
  &.formControlSm {
    padding: $input-btn-padding-y-sm $input-btn-padding-x-sm;
    font-size: $font-size-sm;
    @include border-radius($input-border-radius-sm);
  }
  &.formControlLg {
    padding: $input-btn-padding-y-lg $input-btn-padding-x-lg;
    font-size: $font-size-lg;
    @include border-radius($input-border-radius-lg);
  }

  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }
}

//
// Reset rounded corners
//

.inputGroup .formControl:not(:last-child),
.inputGroupAddon:not(:last-child) {
  @include border-right-radius(0);
}

.inputGroupAddon:not(:last-child) {
  border-right: 0;
}

.inputGroup .formControl:not(:first-child),
.inputGroupAddon:not(:first-child) {
  @include border-left-radius(0);
}

.formControl + .inputGroupAddon:not(:first-child) {
  border-left: 0;
}
