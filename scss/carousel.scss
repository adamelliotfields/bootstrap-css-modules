@import './_variables.scss';
@import './mixins/_hover.scss';
@import './mixins/_transforms.scss';
@import './mixins/_transition.scss';

// Wrapper for the slide container and indicators
.carousel {
  position: relative;
}

.carouselInner {
  position: relative;
  width: 100%;
  overflow: hidden;
}

.carouselItem {
  position: relative;
  display: none;
  width: 100%;

  @include if-supports-3d-transforms() {
    @include transition($carousel-transition);
    backface-visibility: hidden;
    perspective: 1000px;
  }
}

.carouselItem.active,
.carouselItemNext,
.carouselItemPrev {
  display: flex;
}

.carouselItemNext,
.carouselItemPrev {
  position: absolute;
  top: 0;
}

// CSS3 transforms when supported by the browser
@include if-supports-3d-transforms() {
  .carouselItemNext.carouselItemLeft,
  .carouselItemPrev.carouselItemRight {
    transform: translate3d(0, 0, 0);
  }

  .carouselItemNext,
  .active.carouselItemRight {
    transform: translate3d(100%, 0, 0);
  }

  .carouselItemPrev,
  .active.carouselItemLeft {
    transform: translate3d(-100%, 0, 0);
  }
}


//
// Left/right controls for nav
//

.carouselControlPrev,
.carouselControlNext {
  position: absolute;
  top: 0;
  bottom: 0;
  // Use flex for alignment (1-3)
  display: flex; // 1. allow flex styles
  align-items: center; // 2. vertically center contents
  justify-content: center; // 3. horizontally center contents
  width: $carousel-control-width;
  color: $carousel-control-color;
  text-align: center;
  opacity: $carousel-control-opacity;
  // We can't have a transition here because WebKit cancels the carousel
  // animation if you trip this while in the middle of another animation.

  // Hover/focus state
  @include hover-focus {
    color: $carousel-control-color;
    text-decoration: none;
    outline: 0;
    opacity: .9;
  }
}
.carouselControlPrev {
  left: 0;
}
.carouselControlNext {
  right: 0;
}

// Icons for within
.carouselControlPrevIcon,
.carouselControlNextIcon {
  display: inline-block;
  width: $carousel-control-icon-width;
  height: $carousel-control-icon-width;
  background: transparent no-repeat center center;
  background-size: 100% 100%;
}
.carouselControlPrevIcon {
  background-image: $carousel-control-prev-icon-bg;
}
.carouselControlNextIcon {
  background-image: $carousel-control-next-icon-bg;
}


// Optional indicator pips
//
// Add an ordered list with the following class and add a list item for each
// slide your carousel holds.

.carouselIndicators {
  position: absolute;
  right: 0;
  bottom: 10px;
  left: 0;
  z-index: 15;
  display: flex;
  justify-content: center;
  padding-left: 0; // override <ol> default
  // Use the .carousel-control's width as margin so we don't overlay those
  margin-right: $carousel-control-width;
  margin-left: $carousel-control-width;
  list-style: none;

  li {
    position: relative;
    flex: 1 0 auto;
    max-width: $carousel-indicator-width;
    height: $carousel-indicator-height;
    margin-right: $carousel-indicator-spacer;
    margin-left: $carousel-indicator-spacer;
    text-indent: -999px;
    cursor: pointer;
    background-color: rgba($carousel-indicator-active-bg, .5);

    // Use pseudo classes to increase the hit area by 10px on top and bottom.
    &::before {
      position: absolute;
      top: -10px;
      left: 0;
      display: inline-block;
      width: 100%;
      height: 10px;
      content: "";
    }
    &::after {
      position: absolute;
      bottom: -10px;
      left: 0;
      display: inline-block;
      width: 100%;
      height: 10px;
      content: "";
    }
  }

  .active {
    background-color: $carousel-indicator-active-bg;
  }
}


// Optional captions
//
//

.carouselCaption {
  position: absolute;
  right: ((100% - $carousel-caption-width) / 2);
  bottom: 20px;
  left: ((100% - $carousel-caption-width) / 2);
  z-index: 10;
  padding-top: 20px;
  padding-bottom: 20px;
  color: $carousel-caption-color;
  text-align: center;
}
