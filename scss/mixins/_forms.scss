// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `@input-border-color-focus` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.
@mixin form-control-focus() {
  &:focus {
    color: $input-focus-color;
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    outline: none;
    @include box-shadow($input-focus-box-shadow);
  }
}


@mixin form-validation-state($state, $modifier, $color) {
  .formControl,
  .customSelect {
    .wasValidated &:#{$state},
    &.is#{$modifier} {
      border-color: $color;

      &:focus {
        box-shadow: 0 0 0 0.2rem rgba($color, 0.25);
      }

      ~ .invalidFeedback,
      ~ .invalidTooltip {
        display: block;
      }
    }
  }


  // TODO: redo check markup lol crap
  .formCheckInput {
    .wasValidated &:#{$state},
    &.is#{$modifier} {
      + .formCheckLabel {
        color: $color;
      }
    }
  }

  // custom radios and checks
  .customControlInput {
    .wasValidated &:#{$state},
    &.is#{$modifier} {
      ~ .customControlIndicator {
        background-color: rgba($color, .25);
      }
      ~ .customControlDescription {
        color: $color;
      }
    }
  }

  // custom file
  .customFileInput {
    .wasValidated &:#{$state},
    &.is#{$modifier} {
      ~ .customFileControl {
        border-color: $color;

        &::before { border-color: inherit; }
      }
      &:focus {
        box-shadow: 0 0 0 .2rem rgba($color,.25);
      }
    }
  }
}
